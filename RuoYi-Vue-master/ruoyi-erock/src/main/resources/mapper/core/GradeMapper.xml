<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.core.mapper.GradeMapper">

    <resultMap type="Grade" id="GradeResult">
        <result property="classId"    column="class_id"    />
        <result property="className"    column="class_name"    />
    </resultMap>

    <resultMap id="GradeStudentResult" type="Grade" extends="GradeResult">
        <collection property="studentList" notNullColumn="sub_stu_id" javaType="java.util.List" resultMap="StudentResult" />
    </resultMap>

    <resultMap type="Student" id="StudentResult">
        <result property="stuId"    column="sub_stu_id"    />
        <result property="ggId"    column="sub_gg_id"    />
        <result property="classId"    column="sub_class_id"    />
        <result property="stuName"    column="sub_stu_name"    />
        <result property="stuPassword"    column="sub_stu_password"    />
    </resultMap>

    <sql id="selectGradeVo">
        select class_id, class_name from grade
    </sql>

    <select id="selectGradeList" parameterType="Grade" resultMap="GradeResult">
        <include refid="selectGradeVo"/>
        <where>
            <if test="className != null  and className != ''"> and class_name like concat('%', #{className}, '%')</if>
        </where>
    </select>

    <select id="selectGradeByClassId" parameterType="Long" resultMap="GradeStudentResult">
        select a.class_id, a.class_name,
               b.stu_id as sub_stu_id, b.gg_id as sub_gg_id, b.class_id as sub_class_id, b.stu_name as sub_stu_name, b.stu_password as sub_stu_password
        from grade a
                 left join student b on b.class_id = a.class_id
        where a.class_id = #{classId}
    </select>

    <insert id="insertGrade" parameterType="Grade" useGeneratedKeys="true" keyProperty="classId">
        insert into grade
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="className != null">class_name,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="className != null">#{className},</if>
        </trim>
    </insert>

    <update id="updateGrade" parameterType="Grade">
        update grade
        <trim prefix="SET" suffixOverrides=",">
            <if test="className != null">class_name = #{className},</if>
        </trim>
        where class_id = #{classId}
    </update>

    <delete id="deleteGradeByClassId" parameterType="Long">
        delete from grade where class_id = #{classId}
    </delete>

    <delete id="deleteGradeByClassIds" parameterType="String">
        delete from grade where class_id in
        <foreach item="classId" collection="array" open="(" separator="," close=")">
            #{classId}
        </foreach>
    </delete>

    <delete id="deleteStudentByClassIds" parameterType="String">
        delete from student where class_id in
        <foreach item="classId" collection="array" open="(" separator="," close=")">
            #{classId}
        </foreach>
    </delete>

    <delete id="deleteStudentByClassId" parameterType="Long">
        delete from student where class_id = #{classId}
    </delete>

    <insert id="batchStudent">
        insert into student( stu_id, gg_id, class_id, stu_name, stu_password) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.stuId}, #{item.ggId}, #{item.classId}, #{item.stuName}, #{item.stuPassword})
        </foreach>
    </insert>
</mapper>
