<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.core.mapper.StuGroupMapper">

<!--    <resultMap type="Group" id="StuGroupResult">-->
<!--        <result property="ggId"    column="gg_id"    />-->
<!--        <result property="ggName"    column="gg_name"    />-->
<!--        <result property="stuGroupLeader"    column="stu_group_leader"    />-->
<!--    </resultMap>-->

<!--    <resultMap id="StuGroupStudentResult" type="Group" extends="StuGroupResult">-->
<!--        <collection property="studentList" notNullColumn="sub_stu_id" javaType="java.util.List" resultMap="StudentResult" />-->
<!--    </resultMap>-->

    <resultMap type="stuGroup" id="StuGroupResult">
        <result property="ggId"    column="gg_id"    />
        <result property="ggName"    column="gg_name"    />
        <result property="stuGroupLeader"    column="stu_group_leader"    />
    </resultMap>

    <resultMap id="StuGroupStudentResult" type="stuGroup" extends="StuGroupResult">
        <collection property="studentList" notNullColumn="sub_stu_id" javaType="java.util.List" resultMap="StudentResult" />
    </resultMap>

    <resultMap type="Student" id="StudentResult">
        <result property="stuId"    column="sub_stu_id"    />
        <result property="ggId"    column="sub_gg_id"    />
        <result property="classId"    column="sub_class_id"    />
        <result property="stuName"    column="sub_stu_name"    />
        <result property="stuPassword"    column="sub_stu_password"    />
    </resultMap>

    <sql id="selectStuGroupVo">
        select gg_id, gg_name, stu_group_leader from stu_group
    </sql>

    <select id="selectStuGroupList" parameterType="Group" resultMap="StuGroupResult">
        <include refid="selectStuGroupVo"/>
        <where>
            <if test="ggName != null  and ggName != ''"> and gg_name like concat('%', #{ggName}, '%')</if>
            <if test="stuGroupLeader != null "> and stu_group_leader = #{stuGroupLeader}</if>
        </where>
    </select>

    <select id="selectStuGroupByGgId" parameterType="Long" resultMap="StuGroupStudentResult">
        select a.gg_id, a.gg_name, a.stu_group_leader,
               b.stu_id as sub_stu_id, b.gg_id as sub_gg_id, b.class_id as sub_class_id, b.stu_name as sub_stu_name, b.stu_password as sub_stu_password
        from stu_group a
                 left join student b on b.gg_id = a.gg_id
        where a.gg_id = #{ggId}
    </select>

    <insert id="insertStuGroup" parameterType="Group" useGeneratedKeys="true" keyProperty="ggId">
        insert into stu_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="ggName != null">gg_name,</if>
            <if test="stuGroupLeader != null">stu_group_leader,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="ggName != null">#{ggName},</if>
            <if test="stuGroupLeader != null">#{stuGroupLeader},</if>
        </trim>
    </insert>

    <update id="updateStuGroup" parameterType="Group">
        update stu_group
        <trim prefix="SET" suffixOverrides=",">
            <if test="ggName != null">gg_name = #{ggName},</if>
            <if test="stuGroupLeader != null">stu_group_leader = #{stuGroupLeader},</if>
        </trim>
        where gg_id = #{ggId}
    </update>

    <delete id="deleteStuGroupByGgId" parameterType="Long">
        delete from stu_group where gg_id = #{ggId}
    </delete>

    <delete id="deleteStuGroupByGgIds" parameterType="String">
        delete from stu_group where gg_id in
        <foreach item="ggId" collection="array" open="(" separator="," close=")">
            #{ggId}
        </foreach>
    </delete>

    <delete id="deleteStudentByStuIds" parameterType="String">
        delete from student where gg_id in
        <foreach item="ggId" collection="array" open="(" separator="," close=")">
            #{ggId}
        </foreach>
    </delete>

    <delete id="deleteStudentByGgId" parameterType="Long">
        delete from student where gg_id = #{ggId}
    </delete>

    <insert id="batchStudent">
        insert into student( stu_id, gg_id, class_id, stu_name, stu_password) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.stuId}, #{item.ggId}, #{item.classId}, #{item.stuName}, #{item.stuPassword})
        </foreach>
    </insert>
</mapper>
