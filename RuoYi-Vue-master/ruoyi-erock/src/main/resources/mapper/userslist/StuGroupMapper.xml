<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.userslist.mapper.StuGroupMapper">
    
    <resultMap type="StuGroup" id="StuGroupResult">
        <result property="gId"    column="g_id"    />
        <result property="gName"    column="g_name"    />
        <result property="stuGroupLeader"    column="stu_group_leader"    />
    </resultMap>

    <resultMap id="StuGroupStudentResult" type="StuGroup" extends="StuGroupResult">
        <collection property="studentList" notNullColumn="sub_stu_id" javaType="java.util.List" resultMap="StudentResult" />
    </resultMap>

    <resultMap type="Student" id="StudentResult">
        <result property="stuId"    column="sub_stu_id"    />
        <result property="seId"    column="sub_se_id"    />
        <result property="gId"    column="sub_g_id"    />
        <result property="classId"    column="sub_class_id"    />
        <result property="stuName"    column="sub_stu_name"    />
        <result property="password"    column="sub_password"    />
    </resultMap>

    <sql id="selectStuGroupVo">
        select g_id, g_name, stu_group_leader from stu_group
    </sql>

    <select id="selectStuGroupList" parameterType="StuGroup" resultMap="StuGroupResult">
        <include refid="selectStuGroupVo"/>
        <where>  
            <if test="gName != null  and gName != ''"> and g_name like concat('%', #{gName}, '%')</if>
            <if test="stuGroupLeader != null "> and stu_group_leader = #{stuGroupLeader}</if>
        </where>
    </select>
    
    <select id="selectStuGroupByGId" parameterType="Long" resultMap="StuGroupStudentResult">
        select a.g_id, a.g_name, a.stu_group_leader,
 b.stu_id as sub_stu_id, b.se_id as sub_se_id, b.g_id as sub_g_id, b.class_id as sub_class_id, b.stu_name as sub_stu_name, b.password as sub_password
        from stu_group a
        left join student b on b.g_id = a.g_id
        where a.g_id = #{gId}
    </select>
        
    <insert id="insertStuGroup" parameterType="StuGroup">
        insert into stu_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="gId != null">g_id,</if>
            <if test="gName != null and gName != ''">g_name,</if>
            <if test="stuGroupLeader != null">stu_group_leader,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="gId != null">#{gId},</if>
            <if test="gName != null and gName != ''">#{gName},</if>
            <if test="stuGroupLeader != null">#{stuGroupLeader},</if>
         </trim>
    </insert>

    <update id="updateStuGroup" parameterType="StuGroup">
        update stu_group
        <trim prefix="SET" suffixOverrides=",">
            <if test="gName != null and gName != ''">g_name = #{gName},</if>
            <if test="stuGroupLeader != null">stu_group_leader = #{stuGroupLeader},</if>
        </trim>
        where g_id = #{gId}
    </update>

    <delete id="deleteStuGroupByGId" parameterType="Long">
        delete from stu_group where g_id = #{gId}
    </delete>

    <delete id="deleteStuGroupByGIds" parameterType="String">
        delete from stu_group where g_id in 
        <foreach item="gId" collection="array" open="(" separator="," close=")">
            #{gId}
        </foreach>
    </delete>
    
    <delete id="deleteStudentByGIds" parameterType="String">
        delete from student where g_id in 
        <foreach item="gId" collection="array" open="(" separator="," close=")">
            #{gId}
        </foreach>
    </delete>

    <delete id="deleteStudentByGId" parameterType="Long">
        delete from student where g_id = #{gId}
    </delete>

    <insert id="batchStudent">
        insert into student( stu_id, se_id, g_id, class_id, stu_name, password) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.stuId}, #{item.seId}, #{item.gId}, #{item.classId}, #{item.stuName}, #{item.password})
        </foreach>
    </insert>
</mapper>