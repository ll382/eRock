<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.knowledgeQuiz.mapper.QuestionMapper">

    <resultMap type="Question" id="QuestionResult">
        <result property="qqId"    column="qq_id"    />
        <result property="qqContent"    column="qq_content"    />
    </resultMap>

    <resultMap id="QuestionResultResult" type="Question" extends="QuestionResult">
        <collection property="resultList" notNullColumn="sub_oo_id" javaType="java.util.List" resultMap="ResultResult" />
    </resultMap>

    <resultMap type="Result" id="ResultResult">
        <result property="ooId"    column="sub_oo_id"    />
        <result property="qqId"    column="sub_qq_id"    />
        <result property="ooContent"    column="sub_oo_content"    />
        <result property="result"    column="sub_result"    />
    </resultMap>

    <sql id="selectQuestionVo">
        select qq_id, qq_content from a1_question
    </sql>

    <select id="selectQuestionList" parameterType="Question" resultMap="QuestionResult">
        <include refid="selectQuestionVo"/>
        <where>
            <if test="qqId != null "> and qq_id = #{qqId}</if>
            <if test="qqContent != null  and qqContent != ''"> and qq_content like concat('%', #{qqContent}, '%')</if>
        </where>
    </select>

    <select id="selectQuestionByQqIdList" parameterType="Long" resultMap="QuestionResultResult">
        select a.qq_id, a.qq_content,
               b.oo_id as sub_oo_id, b.qq_id as sub_qq_id, b.oo_content as sub_oo_content, b.result as sub_result
        from a1_question a
                 left join a1_result b on b.qq_id = a.qq_id
        where a.qq_id = #{qqId}
    </select>

    <select id="selectQuestionByQqId" parameterType="Long" resultMap="QuestionResultResult">
        select a.qq_id, a.qq_content,
 b.oo_id as sub_oo_id, b.qq_id as sub_qq_id, b.oo_content as sub_oo_content, b.result as sub_result
        from a1_question a
        left join a1_result b on b.qq_id = a.qq_id
        where a.qq_id = #{qqId}
    </select>

    <select id="selectQuestionByList" resultMap="QuestionResultResult">
        select a.qq_id, a.qq_content,
        b.oo_id as sub_oo_id, b.qq_id as sub_qq_id, b.oo_content as sub_oo_content, b.result as sub_result
        from a1_question a
        left join a1_result b on b.qq_id = a.qq_id
        where a.qq_id in
        <foreach item="task" collection="taskList" open="(" separator="," close=")">
            #{task}
        </foreach>
    </select>

    <insert id="insertQuestion" parameterType="Question" useGeneratedKeys="true" keyProperty="qqId">
        insert into a1_question
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="qqContent != null">qq_content,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="qqContent != null">#{qqContent},</if>
         </trim>
    </insert>

    <update id="updateQuestion" parameterType="Question">
        update a1_question
        <trim prefix="SET" suffixOverrides=",">
            <if test="qqContent != null">qq_content = #{qqContent},</if>
        </trim>
        where qq_id = #{qqId}
    </update>

    <delete id="deleteQuestionByQqId" parameterType="Long">
        delete from a1_question where qq_id = #{qqId}
    </delete>

    <delete id="deleteQuestionByQqIds" parameterType="String">
        delete from a1_question where qq_id in
        <foreach item="qqId" collection="array" open="(" separator="," close=")">
            #{qqId}
        </foreach>
    </delete>

    <delete id="deleteResultByQqIds" parameterType="String">
        delete from a1_result where qq_id in
        <foreach item="qqId" collection="array" open="(" separator="," close=")">
            #{qqId}
        </foreach>
    </delete>

    <delete id="deleteResultByQqId" parameterType="Long">
        delete from a1_result where qq_id = #{qqId}
    </delete>

    <insert id="batchResult">
        insert into a1_result( oo_id, qq_id, oo_content, result) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.ooId}, #{item.qqId}, #{item.ooContent}, #{item.result})
        </foreach>
    </insert>
</mapper>
