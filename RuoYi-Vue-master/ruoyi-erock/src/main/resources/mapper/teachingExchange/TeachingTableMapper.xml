<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.teachingExchange.mapper.TeachingTableMapper">

    <!--    教学资源父级单元-->
    <resultMap id="TeachingUnit" type="teachingUnit" >
        <result property="unitId" column="les_id"/>
        <result property="unitTitle" column="les_name"/>
    </resultMap>

    <resultMap id="UnitTableResult" type="teachingUnit" extends="TeachingUnit" >
        <collection property="teachingTable" notNullColumn="teaching_id" javaType="java.util.List" resultMap="TeachingTableResult" />
    </resultMap>
    <!--    教学资源父级单元-->

    <resultMap type="TeachingTable" id="TeachingTableResult">
        <result property="teachingId"    column="teaching_id"    />
        <result property="teaId"    column="tea_id"    />
        <result property="resourceUrl"    column="resource_url"    />
        <result property="createdAt"    column="created_at"    />
        <result property="lesId"    column="les_id"    />
        <result property="lesName"    column="les_name"    />
        <result property="teachingTitle" column="teaching_title" />
    </resultMap>

    <resultMap type="Student" id="StudentResult">
        <result property="stuId"    column="user_id"    />
        <result property="stuName"    column="nick_name"    />
    </resultMap>

    <resultMap id="TeachingTableA1CommunicationResult" type="TeachingTable" extends="TeachingTableResult">
        <collection property="a1CommunicationList" notNullColumn="sub_com_id" javaType="java.util.List" resultMap="A1CommunicationResult" />
    </resultMap>

    <resultMap type="remarkPerson" id="RemarkSelfResult">
        <id     property="userId"       column="self_user_id"      />
        <result property="username"     column="self_nick_name"    />
        <result property="avatarUrl"       column="self_avatar"       />
        <result property="role"     column="self_role_name"      />
    </resultMap>
    <resultMap type="remarkPerson" id="RemarkToResult">
        <id     property="userId"       column="to_user_id"      />
        <result property="username"     column="to_nick_name"    />
        <result property="avatarUrl"       column="to_avatar"       />
        <result property="role"     column="to_role_name"      />
    </resultMap>

    <resultMap id="OutTeachingCommunicationResult" type="TeachingTable" extends="TeachingTableResult">
        <collection property="a1CommunicationList" notNullColumn="teaching_id" javaType="java.util.List" resultMap="CommunicationResult" />
    </resultMap>

    <resultMap type="A1Communication" id="CommunicationResult">
        <result property="comId"    column="com_id"    />
        <result property="teachingId"    column="teaching_id"    />
        <result property="comContent"    column="com_content"    />
        <result property="comBy"    column="com_by"    />
        <result property="comTime"    column="com_time"    />
        <result property="comPid"    column="com_pid"    />
        <association property="remarkSelf"    javaType="RemarkPerson" resultMap="RemarkSelfResult" />
        <association property="remarkTo"    javaType="RemarkPerson" resultMap="RemarkToResult" />
    </resultMap>

<!--    原生映射-->
    <resultMap type="A1Communication" id="A1CommunicationResult">
        <result property="comId"    column="sub_com_id"    />
        <result property="teachingId"    column="sub_teaching_id"    />
        <result property="comContent"    column="sub_com_content"    />
        <result property="comBy"    column="sub_com_by"    />
        <result property="comTime"    column="sub_com_time"    />
        <result property="comPid"    column="sub_com_pid"    />
    </resultMap>

    <resultMap id="TeachingTableA1ViewedResult" type="TeachingTable" extends="TeachingTableResult">
        <collection property="a1ViewedList" notNullColumn="sub_view_id" javaType="java.util.List" resultMap="A1ViewedResult" />
    </resultMap>

    <resultMap type="A1Viewed" id="A1ViewedResult">
        <result property="viewId"    column="sub_view_id"    />
        <result property="stuId"    column="sub_stu_id"    />
        <result property="teachingId"    column="sub_teaching_id"    />
        <result property="viewedAt"    column="sub_viewed_at"    />
        <result property="viewDuration"    column="sub_view_duration"    />
        <result property="viewAllDuration"    column="sub_view_all_duration"    />
        <result property="avatarUrl"    column="avatar"    />
        <result property="stuName"    column="nick_name"    />
    </resultMap>



<!--    <sql id="selectRemarkPerson">-->
<!--        select u.user_id as self_user_id, u.nick_name as self_nick_name, u.avatar as self_avatar, r.role_name as self_role_name,-->
<!--               c.com_id, c.com_content, c.com_by, c.com_time, c.com_pid,-->
<!--               e.user_id as to_user_id, e.nick_name as to_nick_name, e.avatar as to_avatar, l.role_name as to_role_name,-->
<!--               b.teaching_id,b.tea_id, b.resource_url, b.created_at-->
<!--        from teaching_table b-->
<!--                 left join a1_communication c on c.teaching_id = b.teaching_id-->
<!--                 left join sys_user u on  u.user_id = c.com_by-->
<!--                 left join sys_user_role ur on u.user_id = ur.user_id-->
<!--                 left join sys_role r on r.role_id = ur.role_id-->
<!--                 left join a1_communication cc on cc.com_id = c.com_pid-->
<!--                 left join sys_user e on e.user_id = cc.com_by-->
<!--                 left join sys_user_role er on e.user_id = er.user_id-->
<!--                 left join sys_role l on l.role_id = er.role_id-->

<!--    </sql>-->

    <sql id="selectRemarkPerson">
        select u.user_id as self_user_id, u.nick_name as self_nick_name, u.avatar as self_avatar, r.role_name as self_role_name,
               c.com_id, c.com_content, c.com_by, c.com_time, c.com_pid,
               e.user_id as to_user_id, e.nick_name as to_nick_name, e.avatar as to_avatar, l.role_name as to_role_name,sb.les_name,
               b.teaching_id,b.tea_id, b.resource_url, b.created_at, b.teaching_title
        from teaching_table b
                 left join a1_communication c on c.teaching_id = b.teaching_id
                 left join sys_user u on  u.user_id = c.com_by
                 left join sys_user_role ur on u.user_id = ur.user_id
                 left join sys_role r on r.role_id = ur.role_id
                 left join a1_communication cc on cc.com_id = c.com_pid
                 left join sys_user e on e.user_id = cc.com_by
                 left join sys_user_role er on e.user_id = er.user_id
                 left join sys_role l on l.role_id = er.role_id
                 left join lesson_units sb on b.les_id = sb.les_id
    </sql>

    <sql id="selectTeachingTableVo">
        select a.teaching_id, a.tea_id, a.resource_url, a.created_at, a.les_id, a.teaching_title,sb.les_name
        from teaching_table a
        left join lesson_units sb on a.les_id = sb.les_id
    </sql>

    <!--    评论父级单元-->
        <select id="selectTeachingUnitList" resultType="teachingUnit" resultMap="UnitTableResult">
            SELECT sb.les_id, sb.les_name, a.teaching_id, a.tea_id, a.resource_url, a.created_at, e.avatar, e.nick_name, a.teaching_title, a.teaching_order,
                   b.view_id AS sub_view_id, b.stu_id AS sub_stu_id, b.teaching_id AS sub_teaching_id, b.viewed_at AS sub_viewed_at, b.view_duration AS sub_view_duration,
                   (SELECT SUM(view_duration) FROM a1_viewed WHERE stu_id = b.stu_id) AS sub_view_all_duration
            FROM teaching_table a
                     LEFT JOIN a1_viewed b ON b.teaching_id = a.teaching_id
                     RIGHT JOIN lesson_units sb ON a.les_id = sb.les_id
                     LEFT JOIN student stu ON stu.stu_id = b.stu_id
                     LEFT JOIN sys_user e ON e.user_id = stu.user_id
            ORDER BY sb.les_order_id ASC, a.teaching_order ASC
        </select>
    <!--    评论父级单元-->

<!--  评论主查询  -->
    <select id="selectCommunicationList" parameterType="teachingTable" resultMap="OutTeachingCommunicationResult">
        <include refid="selectRemarkPerson"/>
        <where>
            <if test="commId != null and commId != ''">
                b.teaching_id = ${commId} AND c.com_pid IS null
            </if>
        </where>
    </select>
<!--   评论子查询     -->
    <select id="selectCommunicationId" resultMap="CommunicationResult">
        <include refid="selectRemarkPerson"/>
            <where>
                c.com_pid = ${subId} order by c.com_time DESC
            </where>
    </select>

<!--    学习时长接口列表-->
    <select id="selectTeachingViewedTableByTeachingId" resultType="teachingUnit" resultMap="A1ViewedResult">
        WITH ranked_data AS (
            SELECT e.avatar, e.nick_name,
                   b.view_id AS sub_view_id, b.stu_id AS sub_stu_id, b.teaching_id AS sub_teaching_id, b.viewed_at AS sub_viewed_at, b.view_duration AS sub_view_duration,
                   (SELECT SUM(view_duration) FROM a1_viewed WHERE stu_id = b.stu_id ) AS sub_view_all_duration,
                   ROW_NUMBER() OVER (PARTITION BY e.nick_name ORDER BY b.viewed_at) AS row_num
            FROM a1_viewed b
                     RIGHT JOIN student stu ON stu.stu_id = b.stu_id
                     RIGHT JOIN sys_user e ON e.user_id = stu.user_id
        )
        SELECT avatar, nick_name, sub_view_id, sub_stu_id, sub_teaching_id, sub_viewed_at, sub_view_duration, sub_view_all_duration
        FROM ranked_data
        WHERE row_num = 1
        ORDER BY sub_view_all_duration DESC

    </select>

    <insert id="insertTeachingViewedTable" parameterType="a1Viewed" useGeneratedKeys="true" keyProperty="viewId">
        insert into a1_viewed
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stuId != null">stu_id,</if>
            <if test="teachingId != null">teaching_id,</if>
            <if test="viewedAt != null">viewed_at,</if>
            <if test="viewDuration != null">view_duration,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stuId != null">#{stuId},</if>
            <if test="teachingId != null">#{teachingId},</if>
            <if test="viewedAt != null">#{viewedAt},</if>
            <if test="viewDuration != null">#{viewDuration},</if>
        </trim>
            where view_id = #{viewId}
    </insert>

    <update id="updateTeachingViewedTable" parameterType="a1Viewed">
        update a1_viewed
        <trim prefix="SET" prefixOverrides="and|or" suffixOverrides=",">
            <if test="stuId != null">stu_id = #{stuId},</if>
            <if test="teachingId != null">teaching_id = #{teachingId},</if>
            <if test="viewedAt != null">viewed_at = #{viewedAt},</if>
            <if test="viewDuration != null">view_duration = #{viewDuration},</if>
        </trim>
        where view_id = #{viewId}
    </update>

    <delete id="deleteViewedTeachingId" parameterType="Long">
        delete from a1_viewed where view_id = #{viewId}
    </delete>

<!--    批量插入-->
    <update id="updateStudent" parameterType="student">
        update student
        <trim prefix="SET" prefixOverrides="and|or" suffixOverrides=",">
            <if test="stuId != null  and stuId != ''"> and user_id = #{stuId}</if>
        </trim>
        where stu_name = #{stuName}
    </update>

    <select id="selectViewed" resultMap="StudentResult">
        select user_id ,nick_name from sys_user
    </select>
<!--    插入-->



    <insert id="batchA1Viewed">
        insert into a1_viewed( view_id, stu_id, teaching_id, viewed_at, view_duration) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.viewId}, #{item.stuId}, #{item.teachingId}, #{item.viewedAt}, #{item.viewDuration})
        </foreach>
    </insert>

<!--  源生方法  -->
    <select id="selectTeachingTableList" parameterType="TeachingTable" resultMap="TeachingTableResult">
        <include refid="selectTeachingTableVo"/>
        <where>
            <if test="teaId != null  and teaId != ''"> and tea_id = #{teaId}</if>
            <if test="resourceUrl != null  and resourceUrl != ''"> and resource_url = #{resourceUrl}</if>
            <if test="createdAt != null "> and created_at = #{createdAt}</if>
        </where>
    </select>

    <select id="selectTeachingTableByTeachingId" parameterType="Long" resultMap="TeachingTableA1CommunicationResult">
        select a.teaching_id, a.tea_id, a.resource_url, a.created_at,sb.les_name,a.teaching_title,a.les_id,
               b.com_id as sub_com_id, b.teaching_id as sub_teaching_id, b.com_content as sub_com_content, b.com_by as sub_com_by, b.com_time as sub_com_time, b.com_pid as sub_com_pid
        from teaching_table a
                 left join lesson_units sb on a.les_id = sb.les_id
                 left join a1_communication b on b.teaching_id = a.teaching_id
        where a.teaching_id = #{teachingId}
        ORDER BY sub_com_time ASC
    </select>

    <insert id="insertTeachingTable" parameterType="TeachingTable" useGeneratedKeys="true" keyProperty="teachingId">
        insert into teaching_table
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="teaId != null">tea_id,</if>
            <if test="resourceUrl != null">resource_url,</if>
            <if test="createdAt != null">created_at,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="teaId != null">#{teaId},</if>
            <if test="resourceUrl != null">#{resourceUrl},</if>
            <if test="createdAt != null">#{createdAt},</if>
        </trim>
    </insert>

    <update id="updateTeachingTable" parameterType="TeachingTable">
        update teaching_table
        <trim prefix="SET" suffixOverrides=",">
            <if test="teaId != null">tea_id = #{teaId},</if>
            <if test="resourceUrl != null">resource_url = #{resourceUrl},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="teachingTitle != null">teaching_title = #{teachingTitle},</if>
            <if test="lesId != null">les_id = #{lesId},</if>
        </trim>
        where teaching_id = #{teachingId}
    </update>

    <delete id="deleteTeachingTableByTeachingId" parameterType="Long">
        delete from teaching_table where teaching_id = #{teachingId}
    </delete>

    <delete id="deleteTeachingTableByTeachingIds" parameterType="String">
        delete from teaching_table where teaching_id in
        <foreach item="teachingId" collection="array" open="(" separator="," close=")">
            #{teachingId}
        </foreach>
    </delete>

    <delete id="deleteA1CommunicationByTeachingIds" parameterType="String">
        delete from a1_communication where teaching_id in
        <foreach item="teachingId" collection="array" open="(" separator="," close=")">
            #{teachingId}
        </foreach>
    </delete>

    <delete id="deleteA1CommunicationByTeachingId" parameterType="Long">
        delete from a1_communication where teaching_id = #{teachingId}
    </delete>

    <insert id="batchA1Communication">
        insert into a1_communication( com_id, teaching_id, com_content, com_by, com_time, com_pid) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.comId}, #{item.teachingId}, #{item.comContent}, #{item.comBy}, #{item.comTime}, #{item.comPid})
        </foreach>
    </insert>
</mapper>
