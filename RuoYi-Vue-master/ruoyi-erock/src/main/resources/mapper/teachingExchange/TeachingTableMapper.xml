<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.teachingExchange.mapper.TeachingTableMapper">

    <resultMap type="TeachingTable" id="TeachingTableResult">
        <result property="teachingId"    column="teaching_id"    />
        <result property="teaId"    column="tea_id"    />
        <result property="resourceUrl"    column="resource_url"    />
        <result property="createdAt"    column="created_at"    />
    </resultMap>

    <resultMap id="TeachingTableA1CommunicationResult" type="TeachingTable" extends="TeachingTableResult">
        <collection property="a1CommunicationList" notNullColumn="sub_com_id" javaType="java.util.List" resultMap="A1CommunicationResult" />
    </resultMap>

    <resultMap type="remarkPerson" id="RemarkSelfResult">
        <id     property="userId"       column="self_user_id"      />
        <result property="username"     column="self_nick_name"    />
        <result property="avatarUrl"       column="self_avatar"       />
        <result property="role"     column="self_role_name"      />
    </resultMap>
    <resultMap type="remarkPerson" id="RemarkToResult">
        <id     property="userId"       column="to_user_id"      />
        <result property="username"     column="to_nick_name"    />
        <result property="avatarUrl"       column="to_avatar"       />
        <result property="role"     column="to_role_name"      />
    </resultMap>

    <resultMap id="OutTeachingCommunicationResult" type="TeachingTable" extends="TeachingTableResult">
        <collection property="a1CommunicationList" notNullColumn="teaching_id" javaType="java.util.List" resultMap="CommunicationResult" />
    </resultMap>

    <resultMap type="A1Communication" id="CommunicationResult">
        <result property="comId"    column="com_id"    />
        <result property="teachingId"    column="teaching_id"    />
        <result property="comContent"    column="com_content"    />
        <result property="comBy"    column="com_by"    />
        <result property="comTime"    column="com_time"    />
        <result property="comPid"    column="com_pid"    />
        <association property="remarkSelf"    javaType="RemarkPerson" resultMap="RemarkSelfResult" />
        <association property="remarkTo"    javaType="RemarkPerson" resultMap="RemarkToResult" />
    </resultMap>

    <resultMap type="A1Communication" id="A1CommunicationResult">
        <result property="comId"    column="sub_com_id"    />
        <result property="teachingId"    column="sub_teaching_id"    />
        <result property="comContent"    column="sub_com_content"    />
        <result property="comBy"    column="sub_com_by"    />
        <result property="comTime"    column="sub_com_time"    />
        <result property="comPid"    column="sub_com_pid"    />
    </resultMap>


    <sql id="selectRemarkPerson">
        select u.user_id as self_user_id, u.nick_name as self_nick_name, u.avatar as self_avatar, r.role_name as self_role_name,
               c.com_id, c.com_content, c.com_by, c.com_time, c.com_pid,
               e.user_id as to_user_id, e.nick_name as to_nick_name, e.avatar as to_avatar, l.role_name as to_role_name,
               b.teaching_id,b.tea_id, b.resource_url, b.created_at
        from teaching_table b
                 left join a1_communication c on c.teaching_id = b.teaching_id
                 left join sys_user u on  u.user_id = c.com_by
                 left join sys_user_role ur on u.user_id = ur.user_id
                 left join sys_role r on r.role_id = ur.role_id
                 left join a1_communication cc on cc.com_id = c.com_pid
                 left join sys_user e on e.user_id = cc.com_by
                 left join sys_user_role er on e.user_id = er.user_id
                 left join sys_role l on l.role_id = er.role_id

    </sql>

    <sql id="selectTeachingTableVo">
        select teaching_id, tea_id, resource_url, created_at from teaching_table
    </sql>

    <select id="selectCommunicationList" parameterType="teachingTable" resultMap="OutTeachingCommunicationResult">
        <include refid="selectRemarkPerson"/>
        <where>
            <if test="commId != null and commId != ''">
                b.teaching_id = ${commId}
            </if>
        </where>
    </select>

    <select id="selectCommunicationId" parameterType="A1Communication" resultMap="CommunicationResult">
        <include refid="selectRemarkPerson"/>
            <where>
                c.com_pid = ${subId}
            </where>
    </select>

    <select id="selectTeachingTableList" parameterType="TeachingTable" resultMap="TeachingTableResult">
        <include refid="selectTeachingTableVo"/>
        <where>
            <if test="teaId != null  and teaId != ''"> and tea_id = #{teaId}</if>
            <if test="resourceUrl != null  and resourceUrl != ''"> and resource_url = #{resourceUrl}</if>
            <if test="createdAt != null "> and created_at = #{createdAt}</if>
        </where>
    </select>

    <select id="selectTeachingTableByTeachingId" parameterType="Long" resultMap="TeachingTableA1CommunicationResult">
        select a.teaching_id, a.tea_id, a.resource_url, a.created_at,
               b.com_id as sub_com_id, b.teaching_id as sub_teaching_id, b.com_content as sub_com_content, b.com_by as sub_com_by, b.com_time as sub_com_time, b.com_pid as sub_com_pid
        from teaching_table a
                 left join a1_communication b on b.teaching_id = a.teaching_id
        where a.teaching_id = #{teachingId}
        ORDER BY sub_com_time ASC
    </select>

    <insert id="insertTeachingTable" parameterType="TeachingTable" useGeneratedKeys="true" keyProperty="teachingId">
        insert into teaching_table
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="teaId != null">tea_id,</if>
            <if test="resourceUrl != null">resource_url,</if>
            <if test="createdAt != null">created_at,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="teaId != null">#{teaId},</if>
            <if test="resourceUrl != null">#{resourceUrl},</if>
            <if test="createdAt != null">#{createdAt},</if>
        </trim>
    </insert>

    <update id="updateTeachingTable" parameterType="TeachingTable">
        update teaching_table
        <trim prefix="SET" suffixOverrides=",">
            <if test="teaId != null">tea_id = #{teaId},</if>
            <if test="resourceUrl != null">resource_url = #{resourceUrl},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
        </trim>
        where teaching_id = #{teachingId}
    </update>

    <delete id="deleteTeachingTableByTeachingId" parameterType="Long">
        delete from teaching_table where teaching_id = #{teachingId}
    </delete>

    <delete id="deleteTeachingTableByTeachingIds" parameterType="String">
        delete from teaching_table where teaching_id in
        <foreach item="teachingId" collection="array" open="(" separator="," close=")">
            #{teachingId}
        </foreach>
    </delete>

    <delete id="deleteA1CommunicationByTeachingIds" parameterType="String">
        delete from a1_communication where teaching_id in
        <foreach item="teachingId" collection="array" open="(" separator="," close=")">
            #{teachingId}
        </foreach>
    </delete>

    <delete id="deleteA1CommunicationByTeachingId" parameterType="Long">
        delete from a1_communication where teaching_id = #{teachingId}
    </delete>

    <insert id="batchA1Communication">
        insert into a1_communication( com_id, teaching_id, com_content, com_by, com_time, com_pid) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.comId}, #{item.teachingId}, #{item.comContent}, #{item.comBy}, #{item.comTime}, #{item.comPid})
        </foreach>
    </insert>
</mapper>
