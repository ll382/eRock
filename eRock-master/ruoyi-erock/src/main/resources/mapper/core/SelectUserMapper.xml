<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace等于mapper接口类的全限定名,这样实现对应 -->
<mapper namespace="com.ruoyi.core.mapper.SelectUserMapper">
<!--    学生映射-->
    <resultMap id="studentImgRequst" type="selectUserVo" autoMapping="true">
            <result column="stuId" property="id"/>
            <result column="stuName" property="name"/>
            <result column="stuImg" property="img"/>
            <result column="doneIndex" property="doneIndex" />
    </resultMap>
<!--    老师映射-->
    <resultMap id="teacherImgRequst" type="BaseEntity" autoMapping="true">
            <result column="teaId" property="teaId"/>
        <association property="teacher" javaType="selectUserVo">
            <result column="teaId" property="id"/>
            <result column="teaName" property="name"/>
            <result column="teaImg" property="img"/>
        </association>
    </resultMap>
<!--    小组映射-->
    <resultMap type="Group" id="StuGroupResult">
        <result property="ggId"    column="gg_id"    />
        <result property="ggName"    column="gg_name"    />
        <result property="stuGroupLeader"    column="stu_group_leader"    />
    </resultMap>

    <sql id="studentRequst">
        Select s.stu_id as stuId, e.avatar as stuImg,s.stu_name as stuName from student s left JOIN sys_user e ON e.user_id = s.user_id
    </sql>

    <sql id="teacherRequst">
        Select t.tea_id as teaId, e.avatar as teaImg,t.tea_name as teaName from teacher t left JOIN sys_user e ON e.user_id = t.user_id
    </sql>

    <sql id="groupRequst">
        select gg_id, gg_name, stu_group_leader from stu_group
    </sql>

    <select id="selectStudents" parameterType="list" resultMap="studentImgRequst" >
        <include refid="studentRequst" />
        <where>
            <choose>
                <when test="list != null and list.size() > 0">
                    s.stu_id IN
                    <foreach item="item" collection="list" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </when>
                <otherwise>
                    false
                </otherwise>
            </choose>
        </where>

    </select>

    <select id="selectUndoneStudents" parameterType="list" resultMap="studentImgRequst" >
        <include refid="studentRequst" />
        <where>
            <choose>
                <when test="list != null and list.size() > 0">
                    s.stu_id NOT IN
                    <foreach item="item" collection="list" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </when>
                <otherwise>
                    true
                </otherwise>
            </choose>
        </where>
    </select>

    <select id="selectUndoneGroup" resultMap="studentImgRequst" >
        <include refid="studentRequst" />
        <where>
            <choose>
                <when test="stuList != null and stuList.size() > 0">
                    s.gg_Id = #{ggId} AND s.stu_id NOT IN
                    <foreach item="item" collection="stuList" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </when>
                <otherwise>
                    s.gg_Id = #{ggId}
                </otherwise>
            </choose>
        </where>
    </select>

    <select id="selectUndoneTeacher" parameterType="list" resultMap="teacherImgRequst" >
        <include refid="teacherRequst" />
        <choose>
            <when test="list != null and list.size() > 0">
                t.tea_id NOT IN
                <foreach item="item" collection="list" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
            <otherwise>
                true
            </otherwise>
        </choose>
    </select>

    <select id="selectTeachers" parameterType="list" resultMap="teacherImgRequst" affectData="false">
        <if test="list != null and list.size() > 0">
            <foreach item="item" collection="list" separator=";" close=";">
                <include refid="teacherRequst" />
                <where>
                        t.tea_id = #{item}
                </where>
            </foreach>
        </if>
    </select>

    <select id="selectUserFrequency" parameterType="selectUserVo" resultMap="studentImgRequst">
        Select s.stu_id as stuId, e.avatar as stuImg, s.stu_name as stuName,
        (SELECT COUNT(*) FROM a3_weekly_training WHERE stu_id = stuId) as doneIndex
        from student s left JOIN sys_user e ON e.user_id = s.user_id
        <where>
            <if test="list != null and list.size() > 0">
                s.stu_id IN
                <foreach item="item" collection="list" open="(" separator="," close=")">
                    #{item.Id}
                </foreach>
                ORDER BY doneIndex desc
            </if>
        </where>
    </select>

    <select id="selectUserFrequencyByRtId" parameterType="selectUserVo" resultMap="studentImgRequst">
        Select s.stu_id as stuId, e.avatar as stuImg, s.stu_name as stuName,
        (SELECT COUNT(*) FROM a3_weekly_training WHERE stu_id = stuId AND phtr_id = #{phtrId}) as doneIndex
        from student s left JOIN sys_user e ON e.user_id = s.user_id
        <where>
<!--            <if test="list != null and list.size() > 0">-->
<!--                s.stu_id IN-->
<!--                <foreach item="item" collection="list" open="(" separator="," close=")">-->
<!--                    #{item.id}-->
<!--                </foreach>-->
<!--                ORDER BY doneIndex desc-->
<!--            </if>-->
            <choose>
                <when test="list != null and list.size() > 0">
                    s.stu_id IN
                    <foreach item="item" collection="list" open="(" separator="," close=")">
                        #{item.id}
                    </foreach>
                    ORDER BY doneIndex desc
                </when>
                <otherwise>
                    false
                </otherwise>
            </choose>
        </where>
    </select>

    <select id="selectInGroupStudent" resultMap="studentImgRequst">
        <include refid="studentRequst" />
        <where>
            <if test="ggId != null">
                s.gg_id = #{ggId}
            </if>
        </where>
    </select>

    <select id="selectGroup" parameterType="java.util.List" resultMap="StuGroupResult" >
        <include refid="groupRequst" />
        <where>
            <if test="ggId != null and ggId.size() > 0">
                gg_id NOT IN
                <foreach item="item" collection="ggId" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

</mapper>
